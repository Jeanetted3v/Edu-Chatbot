name: GitHub Actions Vercel Production Deployment

on:
  push:
    branches:
      - main  # Only deploy from main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    environment: chat 
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠️ Install Vercel CLI
        working-directory: src/frontend
        run: npm install --global vercel@canary

      - name: 📦 Install Dependencies
        working-directory: src/frontend
        run: npm install

      - name: 📄 Inject Environment Variables
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "AZURE_ENDPOINT=${{ secrets.AZURE_ENDPOINT }}" >> $GITHUB_ENV
          echo "AZURE_API_KEY=${{ secrets.AZURE_API_KEY }}" >> $GITHUB_ENV
          echo "AZURE_API_VERSION=${{ secrets.AZURE_API_VERSION }}" >> $GITHUB_ENV
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> $GITHUB_ENV
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> $GITHUB_ENV
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV
          echo "GOOGLE_CREDENTIALS_PATH=${{ secrets.GOOGLE_CREDENTIALS_PATH }}" >> $GITHUB_ENV
          echo "GOOGLE_SPREADSHEET_ID=${{ secrets.GOOGLE_SPREADSHEET_ID }}" >> $GITHUB_ENV
          echo "GOOGLE_CLOUD_PROJECT_ID=${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}" >> $GITHUB_ENV
          echo "WEBSITE=${{ secrets.WEBSITE }}" >> $GITHUB_ENV

      - name: 🔍 Debug Repository Structure
        run: |
          echo "Repository root structure:"
          ls -la
          echo "Frontend directory structure:"
          ls -la src/frontend
          echo "Package.json locations:"
          find . -name "package.json" | sort

      - name: 🧠 Pull Vercel Project Settings
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }} --cwd src/frontend

      - name: 🏗️ Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy to Vercel (Production)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🧪 Debug After Deployment
        run: |
          echo "Current working directory: $(pwd)"
          echo "src/frontend contents:"
          ls -la src/frontend
